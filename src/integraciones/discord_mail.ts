import { ClienteMail } from "./cliente_mail";
import axios, { AxiosError } from "axios";

/*
ðŸ‘€ Â¡Â¡ATENCIÃ“N!!
El cÃ³digo de este archivo *funciona* tal cual estÃ¡ y no debe realizarse ninguna modificaciÃ³n.
Lo incluimos en el proyecto Ãºnicamente con fines didÃ¡cticos, para quienes quieran ver cÃ³mo
estÃ¡ hecho. El ejercicio se tiene que resolver sin alterar para nada este archivo.
 */

type DiscordMessage = {
  embeds: DiscordEmbed[];
};

type DiscordEmbed = {
  title: string;
  description: string;
  fields: DiscordEmbedField[];
};

type DiscordEmbedField = {
  name: string;
  value: string;
  inline: boolean;
};

export class DiscordMail implements ClienteMail {
  private urlBase: string;

  constructor(
    public nombreGrupo: string,
    webhookId: string,
    webhookToken: string
  ) {
    this.urlBase = `https://discord.com/api/webhooks/${webhookId}/${webhookToken}`;
  }

  async enviar(
    destinatario: string,
    asunto: string,
    cuerpo: string
  ): Promise<void> {
    try {
      await axios.post(
        this.urlBase,
        this.crearRequest(destinatario, asunto, cuerpo)
      );
    } catch (error) {
      if (!axios.isAxiosError(error)) {
        throw error;
      }

      const axError = error as AxiosError;
      throw new Error(`
        FallÃ³ la request a Discord... Â¿habrÃ¡s copiado mal las credenciales?
        Codigo: ${axError.response?.status}
        Error: ${axError.message}
      `);
    }
  }

  private crearRequest(
    destinatario: string,
    asunto: string,
    cuerpo: string
  ): DiscordMessage {
    return {
      embeds: [
        {
          title: ":e_mail: Â¡Nuevo mensaje recibido!",
          description: `_Parece que el grupo **${this.nombreGrupo}** estÃ¡ haciendo algunas pruebas..._`,
          fields: [
            { name: "Destinatario/a", value: destinatario, inline: true },
            { name: "Asunto", value: asunto, inline: true },
            { name: "Cuerpo", value: cuerpo, inline: false },
          ],
        },
      ],
    };
  }
}
